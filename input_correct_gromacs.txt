#This is a correct input example
#Every line beginning with '#' is a comment
#Error occurs only for wrong keys
#case-sensitive
#------------------------------------------------

#Protein code and desired file type, possible values 'cif' or 'pdb'
#'cif' is for PDBx/mmCIF
#'pdb' for standard PDB file (DEFAULT)

protein = 5aol
protein_filetype = pdb

#the model to take from the mmcif, if omitted model = 0 will be taken (starts from 0)
#Protein_model = 0
#the chain to choose from the xray structure (default A)
#Protein_chain = A

#The ph at which the hydrogens shall be added to the protein
#default = 7.0
ph = 7.0

#with which tool the pdb shall be fixed
#adding missing atoms, missing hydrogens and substituting
#non standard residues with standard ones
#default is pdbfixer (needs openmm and conda environment)
# if none no repairing and no residue renaming will be done

repairing_method = pdbfixer

#local tells if the program shall use a protein file that is already
#on the computer
#if 'no' (default) it will download it from the wwPDB database
#if 'yes' insert the absolute path in filepath
#any keyword different from yes and no will abort the program

local = no
#filepath = 2rfh.pdb

#if ligand_in_protein = yes (default) ligand will be taken from the
#protein mmcif file

#if ligand_in_protein = no ligand will be given as input
#ligand = path/to/PDB
#the ligand shall be given as a pdb file (I suggest to use absolute path)

ligand_in_protein = yes
#ligand = ligand.pdb


# The molecular dynamics MD program
# you want the HREM to be setup for
# at the moment the only supproted one is gromacs

MD_program = gromacs

# The path to the gromacs executable
# gromacs is always used to minimaze and equilibrate the
# system no matter what MD program the HREM will be setup for

gromacs_program_path = gmx

# protein_forcefields and water_forcefields
# should be comma separated lists (or single names) of
# xml forcefield files that openmm Forcefield object can
# find, therefore thez can be one of them inside openmm, openmmforcefields
# or custom ones in your working directory
# DEFAULTS:
# protein_forcefields = amber/ff14SB.xml
# water_forcefields = amber/tip3p_standard.xml
protein_forcefields = amber/ff14SB.xml
water_forcefields = amber/tip3p_standard.xml


# ligand_forcefield must be one of the FF supported by
# openmmforcefields.generators, at the moment GAFFx.x and the
# openff initiative ones (es SMIRNOFF) are supported
# DEFAULT = gaff-2.11
# to see the alternatives in a python terminal make:
# $ from openmmforcefields.generators import GAFFTemplateGenerator, SMIRNOFFTemplateGenerator
# $ print(GAFFTemplateGenerator.INSTALLED_FORCEFIELDS)
# $ print('\n')
# $ print(SMIRNOFFTemplateGenerator.INSTALLED_FORCEFIELDS)
ligand_forcefield = gaff-2.11

# the solvent model that will be used
# default is tip3p
# It must be supported by openmm Modeller object
water_model = tip3p

#there can be custom residue substitutions for metal binding residues
#default standard
#standard, custom_zinc
# at the moment only implemented for amber FF
residue_substitution = standard

#gromacs can use gpu accelerators
#there are 3 options
#auto (default)
#cpu uses only cpu even if gpus are available
#gpu forces to use gpus (using auto is HIGHLY RECOMENDED)
use_gpu = auto

#how many GPUs there are per node, default 1
#if gpus shall not be used it will be ignored
gpu_per_node = 1

#The kind of processor present on the HPC cluster
#default skylake
#other options broadwell knl (you can find them in the important_lists.py file)
kind_of_processor = skylake

# how many cores there are on the HPC cluster on each node
#default 64
number_of_cores_per_node = 64


########################################################
# ADVANCED OPTIONS, USE ONLY IF EXPERT
########################################################

#the box shape and dimentions for the protein ligand system (bound)
#box borders is the distance in nm between the protein and the box, default 1.2
box_borders = 1.2

#number of HREM replicas per each Battery for bound and unbound state, default 8
number_of_hrem_replicas_per_battery_bound = 8

number_of_hrem_replicas_per_battery_unbound = 8

#number of bound and unbound batteries per HREM, default auto
bound_batteries = auto
unbound_batteries = auto

#number of MD steps (reference state) for bound and unbound HREM and timesteps, dafault auto
n_steps_bound_hrem = auto
n_steps_unbound_hrem = auto
timestep_bound_hrem = auto
timestep_unbound_hrem = auto

#kind of restraint in the bound and unbound HREM, default auto
#the sintax is the same of the gromacs mdp file: none, h-bonds, all-bonds
#auto will work most of the times
constraints_bound_hrem = auto
constraints_unbound_hrem = auto

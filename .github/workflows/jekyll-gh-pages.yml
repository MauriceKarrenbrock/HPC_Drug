# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python #3.12
        uses: actions/setup-python@v3
        #with:
                #python-version: 3.12
      - name: Add conda to system path
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          conda env update --file environment.yml --name base
      - name: Make docs
        run: |
          python -m pip install .
          python -m pip install -r doc-requirements.txt
          cd docs
          make html
          cp -a build/html/. .
          mv _static static
          sed -i "s/_static/static/g" *.html *.inv *.js
          sed -i "s/_static/static/g" _apidocs/*
          mv _sphinx_design_static/ sphinx_design_static/
          sed -i "s/_sphinx_design_static/sphinx_design_static/g" *.html *.inv *.js
          sed -i "s/_sphinx_design_static/sphinx_design_static/g" _apidocs/*
          mv _apidocs/ apidocs/
          sed -i "s/_apidocs/apidocs/g" *.html *.inv *.js
          cd ..
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: docs/
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
